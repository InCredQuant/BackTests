# -*- coding: utf-8 -*-
"""
Created on Fri May 24 16:17:27 2024

@author: virendra.kumar_incre

Fetches and Calculates the Delta of the Portfolio based on Quantity Holdings from the Trades Capital Allocation excel File, which is generated by the backTest System

"""
import pandas
import numpy as np
from intraday_db_postgres import DataBaseConnect


import warnings
warnings.filterwarnings("ignore")
import re

OptionTickerRegEx = r'(?P<symbol>[A-Z&]+(\-[A-Z&]+)?)(?P<expiry_date>\d+[A-Z]+\d+)(?P<option_type>[A-Z]+)(?P<strike>\d+(\.\d+)?)'


engine_url = f'postgresql+psycopg2://{"postgres"}:{"postgres"}@{"192.168.44.4"}:{"5432"}/{"data"}'
db_obj = DataBaseConnect(engine_url)



import tkinter as tk
from tkinter import filedialog

root = tk.Tk()
root.withdraw()
#root.title('Tk test')
#root.update()
# file_path = filedialog.askopenfilename()
files = filedialog.askopenfilenames()
combinedExp = pandas.DataFrame()
if db_obj.connect():
    for fileName in files:
        quantityDF = pandas.read_excel(fileName, sheet_name= 'Quantity', header = 0, index_col=  0)
        #priceDF = pandas.read_excel(fileName, sheet_name= 'Prices', header = 0, index_col=  0)
        greeksdf = db_obj.getNSEBhavCopyGreeks(quantityDF.columns, fieldName = 'Delta')
        greeksdf = greeksdf.loc[greeksdf.index.isin(quantityDF.index), :]
        quantityDF = quantityDF.loc[quantityDF.index.isin(greeksdf.index)]
        #greeksdf = greeksdf[quantityDF.columns]    
        
        strikesDF = pandas.DataFrame([re.match(OptionTickerRegEx, iTicker).groupdict() for iTicker in greeksdf.columns], index = greeksdf.columns)
        strikesDF.strike = strikesDF.strike.astype('float')
        strikes = pandas.DataFrame(strikesDF.strike)
        
        combined = np.multiply(quantityDF, np.multiply(greeksdf, strikes.transpose())).sum(axis = 1)
        deltaExposure = pandas.DataFrame(combined/(5e7), columns = ["_".join(fileName.split('/')[-1].split('_')[:2])])
        
        combinedExp = pandas.concat([combinedExp, deltaExposure], axis = 1)



